var ModularityInteractiveMap={},ModularityInteractiveMap=ModularityInteractiveMap||{};ModularityInteractiveMap.Categories=function(t){function e(){this.handleEvents()}return e.prototype.handleEvents=function(){t("[data-interactive-map-category]").on("change",function(e){var a=t(e.target).closest("input"),i=a.attr("data-interactive-map-category");a.prop("checked")?this.toggleCategoryPins(i,"show"):this.toggleCategoryPins(i,"hide")}.bind(this))},e.prototype.toggleCategoryPins=function(e,a){var i=t('.mod-interactive-map-pin[data-interactive-map-category-name="'+e+'"]');switch(a){case"hide":return void i.hide();case"show":return void i.show()}},new e}(jQuery);var ModularityInteractiveMap=ModularityInteractiveMap||{};ModularityInteractiveMap.PinTooltip=function(t){function e(){this.handleEvents()}return e.prototype.handleEvents=function(){t(".mod-interactive-map-pin").on("click",function(e){t(e.target).parents(".mod-interactive-map-pin-info").length||this.toggleTooltip(e.target)}.bind(this))},e.prototype.toggleTooltip=function(e){return $target=t(e).closest(".mod-interactive-map-pin"),$target.hasClass("mod-interactive-map-pin-active")?void $target.removeClass("mod-interactive-map-pin-active"):(t(".mod-interactive-map-pin-active").removeClass("mod-interactive-map-pin-active"),void $target.addClass("mod-interactive-map-pin-active"))},new e}(jQuery);